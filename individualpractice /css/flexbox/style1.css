.example-layout{
/* these divs no longer vertically stack. they no longer break each other
they are now horizontally stacked  */
display:flex;
/*however, we do want the groups to be stacked in column format  */
flex-direction: column;
height: 100vh;
}

header, footer{
	padding:20px;
	background: #666;
	color: white;
}

.body{
	display:flex;
	/*when you are given a specific height, flex-grow will grow to height desired
	it is the body itself that is pushing downards, not three columns*/
	flex-grow:1;
	background: pink;
}

.col-1{
	background: lightblue;
	/*since columns(2,3) are given a fixed width, col-1 with "flex-grow:1;" will
	push the rest of it the the right*/
	flex-grow: 1;
}

/*for columns (2&3), we want them to have a fixed width.*/
.col-2{
	background: honeydew;
	width: 160px;
	/*rather than putting two columns on the side, we want the main content to be
	in the middle. "order:-1" will grow in front of Main Content.*/
	order:-1;
}

.col-3{
	background: peachpuff;
	width: 160px;
}

/* To make it Responsive */
@media (max-width:800px){
/* When you shrink it, the display:flex element will turn it into column */
	.body{
		flex-direction: column;
	}
/*just like always, the "width:auto;" puts the width into default mode of what
it should be*/
	.col-2, .col-3{
		width: auto;
	}
	/*since "col-2" in front, we specify the order, but if you want to go back to
	the default, then "order: 0;" will make it come back to the right spot */

	.col-2{
		order:0;
	}
}
